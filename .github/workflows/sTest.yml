name: System Test - File Uploader

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: read
  checks: write

jobs:
  system-test:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install Redis
        run: |
          choco install redis -y
          
      - name: Start Redis server
        shell: pwsh
        run: |
          $redisPath = Get-ChildItem -Path "C:\ProgramData\chocolatey\bin" -Filter "redis-server.exe" -Recurse | Select-Object -First 1
          if ($null -ne $redisPath) {
            Write-Host "Found Redis server at: $($redisPath.FullName)"
            Start-Process -FilePath $redisPath.FullName -ArgumentList "--port 6379" -WindowStyle Hidden
            Start-Sleep -Seconds 5
          } else {
            Write-Error "Could not find redis-server.exe. The Redis installation may have failed."
            exit 1
          }
      
      - name: Restore
        run: dotnet restore

      - name: Build solution
        run: dotnet build

      - name: Start API services
        shell: pwsh
        run: |
          $startScript = Start-Process -FilePath (Join-Path $(Get-Location) "\..\bin\x64\Debug\APIServer\FileUploader.API.exe") -WorkingDirectory $PSScriptRoot -WindowStyle Hidden
          Write-Host "Running $startScript"

      - name: Start Worker services
        shell: pwsh
        run: |
          $startScript = Start-Process -FilePath (Join-Path $(Get-Location) "\..\bin\x64\Debug\Worker\FileUploader.Worker.exe") -WorkingDirectory $PSScriptRoot -WindowStyle Hidden
          Write-Host "Running $startScript"

      - name: Build and Test
        shell: pwsh
        run: |
          Get-ChildItem -Recurse -Filter *.csproj | Where-Object { $_.FullName -match "_sTest" } | ForEach-Object {
          $projName = $_.BaseName
          dotnet test $_.FullName `
          --configuration Debug `
          --logger "trx;LogFileName=${projName}_results.trx" `
          --results-directory ./SystemTestResults
          }

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestResults
          path: ./SystemTestResults

      - name: Report Test Results
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: System Tests
          path: ./SystemTestResults/*.trx
          reporter: dotnet-trx
